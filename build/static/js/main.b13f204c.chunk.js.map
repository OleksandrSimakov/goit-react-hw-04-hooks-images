{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","services/fetchImages.js","components/ImageGallery/ImageGallery.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","services/scrollTo.js","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/App/App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","className","css","SearchForm","e","preventDefault","target","elements","value","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","axios","defaults","baseURL","fetchImages","searchQuery","page","a","get","response","data","hits","ImageGallery","children","ImageGalleryItem","webformatURL","tags","onImgClick","src","alt","ImageGalleryItemImage","onClick","Button","handleMoreBtnClick","name","scrollTo","window","top","document","documentElement","scrollHeight","behavior","Spinner","Loader","color","height","width","timeout","visible","modalRoot","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","event","currentTarget","addEventListener","this","removeEventListener","createPortal","Overlay","Component","App","state","queryStatus","images","currentPage","selectedImageSrc","selectedImageTags","modalOpened","styles","img","maxWidth","maxHeight","handleSubmit","setState","prevState","handleImgClick","largeImageURL","closeModal","_","reqStatus","map","id","style","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b13f204c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2bkPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__17sQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchFormButton\":\"Searchbar_SearchFormButton__21S85\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__8f9cn\",\"SearchFormInput\":\"Searchbar_SearchFormInput__VhsfU\"};","import css from './Searchbar.module.css'\nimport PropTypes from 'prop-types'\n\nfunction Searchbar({ onSubmit }) {\n  const handleSearch = (e) => {\n    e.preventDefault()\n    onSubmit(e.target.elements.[1].value)\n  }\n\n  return (\n    <header className={css.Searchbar}>\n      <form className={css.SearchForm} onSubmit={handleSearch}>\n        <button type=\"submit\" className={css.SearchFormButton}>\n          <span className={css.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={css.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  )\n}\n\nexport default Searchbar\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}","import axios from 'axios'\n\naxios.defaults.baseURL = 'https://pixabay.com/api/'\n\nexport const fetchImages = async (searchQuery, page) => {\n  const params =\n    '&key=21751722-1c715179d2c000e30188b4b67&image_type=photo&orientation=horizontal&per_page=12'\n  const response = await axios.get(`?q=${searchQuery}&page=${page}&${params}`)\n  return response.data.hits\n}\n","import css from './ImageGallery.module.css'\nimport PropTypes from 'prop-types'\n\nfunction ImageGallery({ children }) {\n  return <ul className={css.ImageGallery}>{children}</ul>\n}\n\nexport default ImageGallery\n\nImageGallery.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n","import css from './ImageGalleryItem.module.css'\nimport PropTypes from 'prop-types'\n\nfunction ImageGalleryItem({ webformatURL, tags, onImgClick }) {\n  return (\n    <li className={css.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className={css.ImageGalleryItemImage}\n        onClick={onImgClick}\n      />\n    </li>\n  )\n}\n\nexport default ImageGalleryItem\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onImgClick: PropTypes.func.isRequired,\n}\n","import css from './Button.module.css'\nimport PropTypes from 'prop-types'\n\nfunction Button({ handleMoreBtnClick }) {\n  return (\n    <button\n      type=\"submit\"\n      name=\"more\"\n      className={css.Button}\n      onClick={handleMoreBtnClick}\n    >\n      Load more\n    </button>\n  )\n}\n\nexport default Button\n\nButton.propTypes = {\n  handleMoreBtnClick: PropTypes.func.isRequired,\n}\n","function scrollTo() {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  })\n}\n\nexport default scrollTo\n","import css from './Loader.module.css'\nimport Loader from 'react-loader-spinner'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\n\nfunction Spinner() {\n  return (\n    <Loader\n      className={css.Loader}\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={2000}\n      visible={true}\n    />\n  )\n}\n\nexport default Spinner\n","import React, { Component } from 'react'\nimport { createPortal } from 'react-dom'\nimport css from './Modal.module.css'\n\nconst modalRoot = document.querySelector('#modal-root')\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === 'Escape') {\n      this.props.onClose()\n    }\n  }\n\n  handleBackdropClick = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose()\n    }\n  }\n\n  render() {\n    return createPortal(\n      <div className={css.Overlay} onClick={this.handleBackdropClick}>\n        <div>{this.props.children}</div>\n      </div>,\n\n      modalRoot,\n    )\n  }\n}\n","import '../App/App.css'\nimport React, { Component } from 'react'\nimport Searchbar from '../Searchbar/Searchbar'\nimport { fetchImages } from '../../services/fetchImages'\nimport ImageGallery from '../ImageGallery/ImageGallery'\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\nimport Button from '../Button/Button'\nimport scrollTo from '../../services/scrollTo.js'\nimport Spinner from '../Loader/Loader'\nimport Modal from '../Modal/Modal'\n\nexport default class App extends Component {\n  state = {\n    searchQuery: null,\n    queryStatus: 'idle',\n    images: [],\n    currentPage: null,\n    selectedImageSrc: null,\n    selectedImageTags: null,\n    modalOpened: false,\n  }\n\n  styles = {\n    img: {\n      maxWidth: 'calc(100vw - 48px)',\n      maxHeight: 'calc(100vh - 24px)',\n    },\n  }\n\n  handleSubmit = (searchQuery) => {\n    this.setState({ searchQuery, currentPage: 1 })\n  }\n\n  async componentDidUpdate(_, prevState) {\n    const { searchQuery, currentPage } = this.state\n\n    const shouldFetch =\n      (prevState.searchQuery !== searchQuery && searchQuery !== '') ||\n      prevState.currentPage !== currentPage\n\n    if (shouldFetch) {\n      try {\n        this.setState({ queryStatus: 'pending' })\n\n        const images = await fetchImages(searchQuery, currentPage)\n\n        this.setState((prevState) => ({\n          queryStatus: 'resolved',\n          images: [...prevState.images, ...images],\n        }))\n\n        scrollTo()\n      } catch (error) {\n        this.setState({ reqStatus: 'rejected' })\n      }\n    }\n  }\n\n  handleMoreBtnClick = (e) => {\n    e.preventDefault()\n\n    this.setState((prevState) => ({\n      currentPage: prevState.currentPage + 1,\n    }))\n  }\n\n  handleImgClick = (largeImageURL, tags) => {\n    this.setState({\n      selectedImageSrc: largeImageURL,\n      selectedImageTags: tags,\n      modalOpened: true,\n    })\n  }\n\n  closeModal = () => {\n    this.setState({ modalOpened: false })\n  }\n\n  render() {\n    const {\n      images,\n      queryStatus,\n      selectedImageSrc,\n      selectedImageTags,\n      modalOpened,\n    } = this.state\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSubmit} />\n\n        <ImageGallery>\n          {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n            <ImageGalleryItem\n              key={id}\n              webformatURL={webformatURL}\n              tags={tags}\n              onImgClick={() => this.handleImgClick(largeImageURL, tags)}\n            />\n          ))}\n        </ImageGallery>\n\n        {queryStatus === 'resolved' && (\n          <Button handleMoreBtnClick={this.handleMoreBtnClick} />\n        )}\n\n        {queryStatus === 'pending' && <Spinner />}\n\n        {modalOpened && (\n          <Modal onClose={this.closeModal}>\n            <img\n              style={this.styles.img}\n              src={selectedImageSrc}\n              alt={selectedImageTags}\n            />\n          </Modal>\n        )}\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}