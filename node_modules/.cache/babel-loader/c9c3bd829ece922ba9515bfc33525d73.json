{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-03-image-finder/src/components/App/App.js\";\nimport '../App/App.css';\nimport React, { Component } from 'react';\nimport Searchbar from '../Searchbar/Searchbar';\nimport { fetchImages } from '../../services/fetchImages';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nimport scrollTo from '../../services/scrollTo.js';\nimport Spinner from '../Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchQuery: '',\n      queryStatus: 'idle',\n      images: [],\n      currentPage: 1\n    };\n\n    this.handleSubmit = searchQuery => {\n      this.setState({\n        searchQuery,\n        currentPage: 1\n      });\n    };\n\n    this.handleMoreBtnClick = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        currentPage: prevState.currentPage + 1\n      }));\n    };\n  }\n\n  async componentDidUpdate(_, prevState) {\n    const {\n      searchQuery,\n      currentPage\n    } = this.state;\n    const shouldFetch = prevState.searchQuery !== searchQuery && searchQuery !== '' || prevState.currentPage !== currentPage;\n\n    if (shouldFetch) {\n      try {\n        this.setState({\n          queryStatus: 'pending'\n        });\n        const images = await fetchImages(searchQuery, currentPage);\n        this.setState(prevState => ({\n          queryStatus: 'resolved',\n          images: [...prevState.images, ...images]\n        }));\n        scrollTo();\n      } catch (error) {\n        this.setState({\n          reqStatus: 'rejected'\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      images,\n      queryStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n        children: images.map(({\n          id,\n          webformatURL,\n          tags\n        }) => /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n          webformatURL: webformatURL,\n          tags: tags\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), queryStatus === 'resolved' && /*#__PURE__*/_jsxDEV(Button, {\n        handleMoreBtnClick: this.handleMoreBtnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-03-image-finder/src/components/App/App.js"],"names":["React","Component","Searchbar","fetchImages","ImageGallery","ImageGalleryItem","Button","scrollTo","Spinner","App","state","searchQuery","queryStatus","images","currentPage","handleSubmit","setState","handleMoreBtnClick","e","preventDefault","prevState","componentDidUpdate","_","shouldFetch","error","reqStatus","render","map","id","webformatURL","tags"],"mappings":";AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,eAAe,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCS,KADyC,GACjC;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,WAAW,EAAE,MAFP;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,WAAW,EAAE;AAJP,KADiC;;AAAA,SAQzCC,YARyC,GAQzBJ,WAAD,IAAiB;AAC9B,WAAKK,QAAL,CAAc;AAAEL,QAAAA,WAAF;AAAeG,QAAAA,WAAW,EAAE;AAA5B,OAAd;AACD,KAVwC;;AAAA,SAoCzCG,kBApCyC,GAoCnBC,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AAEA,WAAKH,QAAL,CAAeI,SAAD,KAAgB;AAC5BN,QAAAA,WAAW,EAAEM,SAAS,CAACN,WAAV,GAAwB;AADT,OAAhB,CAAd;AAGD,KA1CwC;AAAA;;AAYjB,QAAlBO,kBAAkB,CAACC,CAAD,EAAIF,SAAJ,EAAe;AACrC,UAAM;AAAET,MAAAA,WAAF;AAAeG,MAAAA;AAAf,QAA+B,KAAKJ,KAA1C;AACA,UAAMa,WAAW,GACdH,SAAS,CAACT,WAAV,KAA0BA,WAA1B,IAAyCA,WAAW,KAAK,EAA1D,IACAS,SAAS,CAACN,WAAV,KAA0BA,WAF5B;;AAIA,QAAIS,WAAJ,EAAiB;AACf,UAAI;AACF,aAAKP,QAAL,CAAc;AAAEJ,UAAAA,WAAW,EAAE;AAAf,SAAd;AAEA,cAAMC,MAAM,GAAG,MAAMV,WAAW,CAACQ,WAAD,EAAcG,WAAd,CAAhC;AAEA,aAAKE,QAAL,CAAeI,SAAD,KAAgB;AAC5BR,UAAAA,WAAW,EAAE,UADe;AAE5BC,UAAAA,MAAM,EAAE,CAAC,GAAGO,SAAS,CAACP,MAAd,EAAsB,GAAGA,MAAzB;AAFoB,SAAhB,CAAd;AAKAN,QAAAA,QAAQ;AACT,OAXD,CAWE,OAAOiB,KAAP,EAAc;AACd,aAAKR,QAAL,CAAc;AAAES,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF;AACF;;AAUDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,MAAF;AAAUD,MAAAA;AAAV,QAA0B,KAAKF,KAArC;AACA,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKK;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA,kBACGF,MAAM,CAACc,GAAP,CAAW,CAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,YAAN;AAAoBC,UAAAA;AAApB,SAAD,kBACV,QAAC,gBAAD;AAEE,UAAA,YAAY,EAAED,YAFhB;AAGE,UAAA,IAAI,EAAEC;AAHR,WACOF,EADP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,EAWGhB,WAAW,KAAK,UAAhB,iBACC,QAAC,MAAD;AAAQ,QAAA,kBAAkB,EAAE,KAAKK;AAAjC;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA,oBADF;AAiBD;;AA/DwC","sourcesContent":["import '../App/App.css'\nimport React, { Component } from 'react'\nimport Searchbar from '../Searchbar/Searchbar'\nimport { fetchImages } from '../../services/fetchImages'\nimport ImageGallery from '../ImageGallery/ImageGallery'\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\nimport Button from '../Button/Button'\nimport scrollTo from '../../services/scrollTo.js'\nimport Spinner from '../Loader/Loader'\n\nexport default class App extends Component {\n  state = {\n    searchQuery: '',\n    queryStatus: 'idle',\n    images: [],\n    currentPage: 1,\n  }\n\n  handleSubmit = (searchQuery) => {\n    this.setState({ searchQuery, currentPage: 1 })\n  }\n\n  async componentDidUpdate(_, prevState) {\n    const { searchQuery, currentPage } = this.state\n    const shouldFetch =\n      (prevState.searchQuery !== searchQuery && searchQuery !== '') ||\n      prevState.currentPage !== currentPage\n\n    if (shouldFetch) {\n      try {\n        this.setState({ queryStatus: 'pending' })\n\n        const images = await fetchImages(searchQuery, currentPage)\n\n        this.setState((prevState) => ({\n          queryStatus: 'resolved',\n          images: [...prevState.images, ...images],\n        }))\n\n        scrollTo()\n      } catch (error) {\n        this.setState({ reqStatus: 'rejected' })\n      }\n    }\n  }\n\n  handleMoreBtnClick = (e) => {\n    e.preventDefault()\n\n    this.setState((prevState) => ({\n      currentPage: prevState.currentPage + 1,\n    }))\n  }\n\n  render() {\n    const { images, queryStatus } = this.state\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSubmit} />\n        <ImageGallery>\n          {images.map(({ id, webformatURL, tags }) => (\n            <ImageGalleryItem\n              key={id}\n              webformatURL={webformatURL}\n              tags={tags}\n            />\n          ))}\n        </ImageGallery>\n        {queryStatus === 'resolved' && (\n          <Button handleMoreBtnClick={this.handleMoreBtnClick} />\n        )}\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}