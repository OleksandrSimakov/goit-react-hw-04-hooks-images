{"ast":null,"code":"var _jsxFileName = \"/Users/sima/Documents/GitHub/goit-react-hw-03-image-finder/src/components/App/App.js\";\nimport '../App/App.css';\nimport React, { Component } from 'react';\nimport Searchbar from '../Searchbar/Searchbar';\nimport { fetchImages } from '../../services/fetchImages';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nimport scrollTo from '../../services/scrollTo.js';\nimport Spinner from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchQuery: null,\n      queryStatus: 'idle',\n      images: [],\n      currentPage: null,\n      selectedImage: null\n    };\n\n    this.handleSubmit = searchQuery => {\n      this.setState({\n        searchQuery,\n        currentPage: 1\n      });\n    };\n\n    this.handleMoreBtnClick = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        currentPage: prevState.currentPage + 1\n      }));\n    };\n\n    this.handleImgClick = largeImageURL => {\n      this.setState({\n        selectedImage: largeImageURL\n      });\n      const tags = e.target.tags;\n    };\n  }\n\n  async componentDidUpdate(_, prevState) {\n    const {\n      searchQuery,\n      currentPage\n    } = this.state;\n    const shouldFetch = prevState.searchQuery !== searchQuery && searchQuery !== '' || prevState.currentPage !== currentPage;\n\n    if (shouldFetch) {\n      try {\n        this.setState({\n          queryStatus: 'pending'\n        });\n        const images = await fetchImages(searchQuery, currentPage);\n        this.setState(prevState => ({\n          queryStatus: 'resolved',\n          images: [...prevState.images, ...images]\n        }));\n        scrollTo();\n      } catch (error) {\n        this.setState({\n          reqStatus: 'rejected'\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      images,\n      queryStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n        children: images.map(({\n          id,\n          webformatURL,\n          tags,\n          largeImageURL\n        }) => /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n          webformatURL: webformatURL,\n          tags: tags,\n          onImgClick: () => this.handleImgClick(largeImageURL)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), queryStatus === 'resolved' && /*#__PURE__*/_jsxDEV(Button, {\n        handleMoreBtnClick: this.handleMoreBtnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), queryStatus === 'pending' && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-03-image-finder/src/components/App/App.js"],"names":["React","Component","Searchbar","fetchImages","ImageGallery","ImageGalleryItem","Button","scrollTo","Spinner","Modal","App","state","searchQuery","queryStatus","images","currentPage","selectedImage","handleSubmit","setState","handleMoreBtnClick","e","preventDefault","prevState","handleImgClick","largeImageURL","tags","target","componentDidUpdate","_","shouldFetch","error","reqStatus","render","map","id","webformatURL"],"mappings":"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","sourcesContent":["import '../App/App.css'\nimport React, { Component } from 'react'\nimport Searchbar from '../Searchbar/Searchbar'\nimport { fetchImages } from '../../services/fetchImages'\nimport ImageGallery from '../ImageGallery/ImageGallery'\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\nimport Button from '../Button/Button'\nimport scrollTo from '../../services/scrollTo.js'\nimport Spinner from '../Loader/Loader'\nimport Modal from '../Modal/Modal'\n\nexport default class App extends Component {\n  state = {\n    searchQuery: null,\n    queryStatus: 'idle',\n    images: [],\n    currentPage: null,\n    selectedImage: null,\n  }\n\n  handleSubmit = (searchQuery) => {\n    this.setState({ searchQuery, currentPage: 1 })\n  }\n\n  async componentDidUpdate(_, prevState) {\n    const { searchQuery, currentPage } = this.state\n\n    const shouldFetch =\n      (prevState.searchQuery !== searchQuery && searchQuery !== '') ||\n      prevState.currentPage !== currentPage\n\n    if (shouldFetch) {\n      try {\n        this.setState({ queryStatus: 'pending' })\n\n        const images = await fetchImages(searchQuery, currentPage)\n\n        this.setState((prevState) => ({\n          queryStatus: 'resolved',\n          images: [...prevState.images, ...images],\n        }))\n\n        scrollTo()\n      } catch (error) {\n        this.setState({ reqStatus: 'rejected' })\n      }\n    }\n  }\n\n  handleMoreBtnClick = (e) => {\n    e.preventDefault()\n\n    this.setState((prevState) => ({\n      currentPage: prevState.currentPage + 1,\n    }))\n  }\n\n  handleImgClick = (largeImageURL) => {\n    this.setState({ selectedImage: largeImageURL })\n    const tags = e.target.tags\n  }\n\n  render() {\n    const { images, queryStatus } = this.state\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSubmit} />\n\n        <ImageGallery>\n          {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n            <ImageGalleryItem\n              key={id}\n              webformatURL={webformatURL}\n              tags={tags}\n              onImgClick={() => this.handleImgClick(largeImageURL)}\n            />\n          ))}\n        </ImageGallery>\n\n        {queryStatus === 'resolved' && (\n          <Button handleMoreBtnClick={this.handleMoreBtnClick} />\n        )}\n\n        {queryStatus === 'pending' && <Spinner />}\n\n        <Modal></Modal>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}