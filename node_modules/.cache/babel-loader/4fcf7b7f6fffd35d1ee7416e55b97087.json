{"ast":null,"code":"import '../App/App.css';\nimport { useState, useEffect } from 'react';\nimport Searchbar from '../Searchbar/Searchbar';\nimport { fetchImages } from '../../services/fetchImages';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nimport scrollTo from '../../services/scrollTo.js';\nimport Spinner from '../Loader/Loader';\nimport Modal from '../Modal/Modal'; // export default class App extends Component {\n//   state = {\n//     searchQuery: null,\n//     queryStatus: 'idle',\n//     images: [],\n//     currentPage: null,\n//     selectedImageSrc: null,\n//     selectedImageTags: null,\n//     modalOpened: false,\n//   }\n//   styles = {\n//     img: {\n//       maxWidth: 'calc(100vw - 48px)',\n//       maxHeight: 'calc(100vh - 24px)',\n//     },\n//   }\n//   handleSubmit = (searchQuery) => {\n//     this.setState({ searchQuery, currentPage: 1 })\n//   }\n//   async componentDidUpdate(_, prevState) {\n//     const { searchQuery, currentPage } = this.state\n//     const shouldFetch =\n//       (prevState.searchQuery !== searchQuery && searchQuery !== '') ||\n//       prevState.currentPage !== currentPage\n//     if (shouldFetch) {\n//       try {\n//         this.setState({ queryStatus: 'pending' })\n//         const images = await fetchImages(searchQuery, currentPage)\n//         this.setState((prevState) => ({\n//           queryStatus: 'resolved',\n//           images: [...prevState.images, ...images],\n//         }))\n//         scrollTo()\n//       } catch (error) {\n//         this.setState({ reqStatus: 'rejected' })\n//       }\n//     }\n//   }\n//   handleMoreBtnClick = (e) => {\n//     e.preventDefault()\n//     this.setState((prevState) => ({\n//       currentPage: prevState.currentPage + 1,\n//     }))\n//   }\n//   handleImgClick = (largeImageURL, tags) => {\n//     this.setState({\n//       selectedImageSrc: largeImageURL,\n//       selectedImageTags: tags,\n//       modalOpened: true,\n//     })\n//   }\n//   closeModal = () => {\n//     this.setState({ modalOpened: false })\n//   }\n//   render() {\n//     const {\n//       images,\n//       queryStatus,\n//       selectedImageSrc,\n//       selectedImageTags,\n//       modalOpened,\n//     } = this.state\n//     return (\n//       <>\n//         <Searchbar onSubmit={this.handleSubmit} />\n//         <ImageGallery>\n//           {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n//             <ImageGalleryItem\n//               key={id}\n//               webformatURL={webformatURL}\n//               tags={tags}\n//               onImgClick={() => this.handleImgClick(largeImageURL, tags)}\n//             />\n//           ))}\n//         </ImageGallery>\n//         {queryStatus === 'resolved' && (\n//           <Button handleMoreBtnClick={this.handleMoreBtnClick} />\n//         )}\n//         {queryStatus === 'pending' && <Spinner />}\n//         {modalOpened && (\n//           <Modal onClose={this.closeModal}>\n//             <img\n//               style={this.styles.img}\n//               src={selectedImageSrc}\n//               alt={selectedImageTags}\n//             />\n//           </Modal>\n//         )}\n//       </>\n//     )\n//   }\n// }","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-04-hooks-images/src/components/App/App.js"],"names":["useState","useEffect","Searchbar","fetchImages","ImageGallery","ImageGalleryItem","Button","scrollTo","Spinner","Modal"],"mappings":"AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import '../App/App.css'\nimport { useState, useEffect } from 'react'\nimport Searchbar from '../Searchbar/Searchbar'\nimport { fetchImages } from '../../services/fetchImages'\nimport ImageGallery from '../ImageGallery/ImageGallery'\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\nimport Button from '../Button/Button'\nimport scrollTo from '../../services/scrollTo.js'\nimport Spinner from '../Loader/Loader'\nimport Modal from '../Modal/Modal'\n\n// export default class App extends Component {\n//   state = {\n//     searchQuery: null,\n//     queryStatus: 'idle',\n//     images: [],\n//     currentPage: null,\n//     selectedImageSrc: null,\n//     selectedImageTags: null,\n//     modalOpened: false,\n//   }\n\n//   styles = {\n//     img: {\n//       maxWidth: 'calc(100vw - 48px)',\n//       maxHeight: 'calc(100vh - 24px)',\n//     },\n//   }\n\n//   handleSubmit = (searchQuery) => {\n//     this.setState({ searchQuery, currentPage: 1 })\n//   }\n\n//   async componentDidUpdate(_, prevState) {\n//     const { searchQuery, currentPage } = this.state\n\n//     const shouldFetch =\n//       (prevState.searchQuery !== searchQuery && searchQuery !== '') ||\n//       prevState.currentPage !== currentPage\n\n//     if (shouldFetch) {\n//       try {\n//         this.setState({ queryStatus: 'pending' })\n\n//         const images = await fetchImages(searchQuery, currentPage)\n\n//         this.setState((prevState) => ({\n//           queryStatus: 'resolved',\n//           images: [...prevState.images, ...images],\n//         }))\n\n//         scrollTo()\n//       } catch (error) {\n//         this.setState({ reqStatus: 'rejected' })\n//       }\n//     }\n//   }\n\n//   handleMoreBtnClick = (e) => {\n//     e.preventDefault()\n\n//     this.setState((prevState) => ({\n//       currentPage: prevState.currentPage + 1,\n//     }))\n//   }\n\n//   handleImgClick = (largeImageURL, tags) => {\n//     this.setState({\n//       selectedImageSrc: largeImageURL,\n//       selectedImageTags: tags,\n//       modalOpened: true,\n//     })\n//   }\n\n//   closeModal = () => {\n//     this.setState({ modalOpened: false })\n//   }\n\n//   render() {\n//     const {\n//       images,\n//       queryStatus,\n//       selectedImageSrc,\n//       selectedImageTags,\n//       modalOpened,\n//     } = this.state\n\n//     return (\n//       <>\n//         <Searchbar onSubmit={this.handleSubmit} />\n\n//         <ImageGallery>\n//           {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n//             <ImageGalleryItem\n//               key={id}\n//               webformatURL={webformatURL}\n//               tags={tags}\n//               onImgClick={() => this.handleImgClick(largeImageURL, tags)}\n//             />\n//           ))}\n//         </ImageGallery>\n\n//         {queryStatus === 'resolved' && (\n//           <Button handleMoreBtnClick={this.handleMoreBtnClick} />\n//         )}\n\n//         {queryStatus === 'pending' && <Spinner />}\n\n//         {modalOpened && (\n//           <Modal onClose={this.closeModal}>\n//             <img\n//               style={this.styles.img}\n//               src={selectedImageSrc}\n//               alt={selectedImageTags}\n//             />\n//           </Modal>\n//         )}\n//       </>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}