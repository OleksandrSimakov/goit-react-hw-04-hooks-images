{"ast":null,"code":"import{useEffect}from'react';import{createPortal}from'react-dom';import css from'./Modal.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Modal(_ref){var onClose=_ref.onClose,children=_ref.children;var modalRoot=document.querySelector('#modal-root');useEffect(function(){var handleKeyDown=function handleKeyDown(e){if(e.code==='Escape'){onClose();}};window.addEventListener('keydown',handleKeyDown);return function(){window.removeEventListener('keydown',handleKeyDown);};},[onClose]);var handleBackdropClick=function handleBackdropClick(event){if(event.currentTarget===event.target){onClose();}};return/*#__PURE__*/createPortal(/*#__PURE__*/_jsx(\"div\",{className:css.Overlay,onClick:handleBackdropClick,children:/*#__PURE__*/_jsx(\"div\",{children:children})}),modalRoot);}// const modalRoot = document.querySelector('#modal-root')\n// export default class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown)\n//   }\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeyDown)\n//   }\n//   handleKeyDown = (e) => {\n//     if (e.code === 'Escape') {\n//       this.props.onClose()\n//     }\n//   }\n//   handleBackdropClick = (event) => {\n//     if (event.currentTarget === event.target) {\n//       this.props.onClose()\n//     }\n//   }\n//   render() {\n//     return createPortal(\n//       <div className={css.Overlay} onClick={this.handleBackdropClick}>\n//         <div>{this.props.children}</div>\n//       </div>,\n//       modalRoot,\n//     )\n//   }\n// }","map":{"version":3,"sources":["/Users/sima/Documents/GitHub/goit-react-hw-04-hooks-images/src/components/Modal/Modal.jsx"],"names":["useEffect","createPortal","css","Modal","onClose","children","modalRoot","document","querySelector","handleKeyDown","e","code","window","addEventListener","removeEventListener","handleBackdropClick","event","currentTarget","target","Overlay"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,YAAT,KAA6B,WAA7B,CACA,MAAOC,CAAAA,GAAP,KAAgB,oBAAhB,C,2CAEA,cAAe,SAASC,CAAAA,KAAT,MAAsC,IAArBC,CAAAA,OAAqB,MAArBA,OAAqB,CAAZC,QAAY,MAAZA,QAAY,CACnD,GAAMC,CAAAA,SAAS,CAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAlB,CAEAR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3B,GAAIA,CAAC,CAACC,IAAF,GAAW,QAAf,CAAyB,CACvBP,OAAO,GACR,CACF,CAJD,CAKAQ,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmCJ,aAAnC,EACA,MAAO,WAAM,CACXG,MAAM,CAACE,mBAAP,CAA2B,SAA3B,CAAsCL,aAAtC,EACD,CAFD,CAGD,CAVQ,CAUN,CAACL,OAAD,CAVM,CAAT,CAYA,GAAMW,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CACrC,GAAIA,KAAK,CAACC,aAAN,GAAwBD,KAAK,CAACE,MAAlC,CAA0C,CACxCd,OAAO,GACR,CACF,CAJD,CAMA,mBAAOH,YAAY,cACjB,YAAK,SAAS,CAAEC,GAAG,CAACiB,OAApB,CAA6B,OAAO,CAAEJ,mBAAtC,uBACE,qBAAMV,QAAN,EADF,EADiB,CAKjBC,SALiB,CAAnB,CAOD,CAED;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { useEffect } from 'react'\nimport { createPortal } from 'react-dom'\nimport css from './Modal.module.css'\n\nexport default function Modal({ onClose, children }) {\n  const modalRoot = document.querySelector('#modal-root')\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.code === 'Escape') {\n        onClose()\n      }\n    }\n    window.addEventListener('keydown', handleKeyDown)\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [onClose])\n\n  const handleBackdropClick = (event) => {\n    if (event.currentTarget === event.target) {\n      onClose()\n    }\n  }\n\n  return createPortal(\n    <div className={css.Overlay} onClick={handleBackdropClick}>\n      <div>{children}</div>\n    </div>,\n\n    modalRoot,\n  )\n}\n\n// const modalRoot = document.querySelector('#modal-root')\n\n// export default class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown)\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeyDown)\n//   }\n\n//   handleKeyDown = (e) => {\n//     if (e.code === 'Escape') {\n//       this.props.onClose()\n//     }\n//   }\n\n//   handleBackdropClick = (event) => {\n//     if (event.currentTarget === event.target) {\n//       this.props.onClose()\n//     }\n//   }\n\n//   render() {\n//     return createPortal(\n//       <div className={css.Overlay} onClick={this.handleBackdropClick}>\n//         <div>{this.props.children}</div>\n//       </div>,\n\n//       modalRoot,\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}